[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "liftfeat"
version = "1.0.0"
description = "LiftFeat: 3D Geometry-Aware Local Feature Matching"
authors = [
    {name = "Yepeng Liu"},
    {name = "Wenpeng Lai"},
    {name = "Zhou Zhao"},
    {name = "Yuxuan Xiong"},
    {name = "Jinchi Zhu"},
    {name = "Jun Cheng"},
    {name = "Yongchao Xu"},
]
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["computer vision", "feature matching", "deep learning", "3D geometry", "local features"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]
dependencies = [
    "torch>=1.9.0",
    "torchvision>=0.10.0",
    "numpy>=1.19.0",
    "opencv-python>=4.5.0",
    "tqdm>=4.60.0",
    "matplotlib>=3.3.0",
    "scipy>=1.7.0",
    "h5py>=3.1.0",
    "Pillow>=8.0.0",
    "einops>=0.3.0",
    "timm>=0.4.0",
    "kornia>=0.6.0",
]
[project.urls]
Homepage = "https://github.com/MrNeRF/LiftFeat"
Repository = "https://github.com/MrNeRF/LiftFeat"
"Bug Tracker" = "https://github.com/MrNeRF/LiftFeat/issues"
Paper = "https://arxiv.org/abs/2505.03422"
"Original Repository" = "https://github.com/lyp-deeplearning/LiftFeat"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "isort>=5.0",
    "flake8>=3.8",
    "mypy>=0.812",
]
evaluation = [
    "scikit-learn>=1.0.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
]
visualization = [
    "plotly>=5.0.0",
    "ipywidgets>=7.6.0",
]

[project.scripts]
liftfeat-demo = "liftfeat.demo:main"
liftfeat-train = "liftfeat.train:main"

[tool.setuptools]
packages = {find = {}}

[tool.setuptools.package-data]
"*" = ["weights/*.pth", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=liftfeat --cov-report=term-missing --cov-report=html"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "kornia.*",
    "timm.*",
    "einops.*",
]
ignore_missing_imports = true
